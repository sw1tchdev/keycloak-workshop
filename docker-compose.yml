version: '3.9'
services:
  adminer:
    container_name: keycloak-workshop-adminer
    image: adminer
    ports:
      - '30080:8080'
  maildev:
    container_name: keycloak-workshop-maildev
    image: 'djfarrelly/maildev:latest'
    ports:
      - '30081:80'
      - '30082:25'
  postgres:
    container_name: keycloak-workshop-postgres
    image: postgres
    volumes:
      - postgres_workshop_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - '30083:5432'
  python:
    container_name: keycloak-workshop-python
    build: ./apps/backend
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    volumes:
      - './apps/backend/app:/var/www/app/app'
    ports:
      - "30100:8000"
    depends_on:
      keycloak:
        condition: service_healthy
  react:
    build: ./apps/frontend
    container_name: keycloak-workshop-react
    command: npm run dev
    volumes:
      - './apps/frontend/:/var/www/app'
      - 'ignore:/var/www/app/node_modules'
    ports:
      - "30101:8000"
  keycloak:
    container_name: keycloak-workshop-keycloak
    image: quay.io/keycloak/keycloak
    command: ["--verbose", "start-dev", "--http-port=11100"]
    volumes:
      - './keycloak/keycloak.conf:/opt/keycloak/conf/keycloak.conf'
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/11100;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
      KC_FEATURES_DISABLED: impersonation
      KC_HEALTH_ENABLED: 'true'
    depends_on:
      - postgres
  nginx:
    container_name: keycloak-workshop-nginx
    image: nginx:alpine
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "30090:30090"
    depends_on:
      - keycloak
volumes:
  postgres_workshop_data:
    driver: local
  ignore: null
